{
  "contractName": "IERC721TypeExchangeable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenType",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenTypes",
          "type": "uint256[]"
        }
      ],
      "name": "massMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "massBurnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenId",
          "type": "uint256[]"
        }
      ],
      "name": "massTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenTypes",
          "type": "uint256[]"
        }
      ],
      "name": "exchange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenTypes\",\"type\":\"uint256[]\"}],\"name\":\"exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"massBurnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenTypes\",\"type\":\"uint256[]\"}],\"name\":\"massMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"}],\"name\":\"massTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenType\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burnFrom(address,uint256)\":{\"details\":\"Burns the indicated token from `from`'s collection. Only allowed if the caller has approval to access this token its owner's collection (and `from` is the owner of the token).\"},\"exchange(address,uint256[],uint256[])\":{\"details\":\"A batch-operation: burns the indicated tokens from the collection of `owner` (the caller must have approval to do this for all tokens), and mints to them the token type(s) indicated. The caller must have minting privileges and transfer access to all listed tokens (which must be owned by the indicated account).\"},\"massBurnFrom(address,uint256[])\":{\"details\":\"Burns the indicated token from `from`'s collection. Only allowed if the caller has approval to access this token its owner's collection (and `from` is the owner of the token).\"},\"massMint(address,uint256[])\":{\"details\":\"Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction.\"},\"massTransferFrom(address,address,uint256[])\":{\"details\":\"Mass transfers tokens (listed as IDs) between the indicated addresses. The caller must have access to the tokens, which must all be owned by the indicated address. This is not a _safe_ transfer; tokens may be trapped in a contract which can't access them. For safe transfers, move them one at a time.\"},\"mint(address,uint256)\":{\"details\":\"Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/jake/Documents/Development/Freelance/Rara/Git/rara-core/contracts/token/interfaces/IERC721TypeExchangeable.sol\":\"IERC721TypeExchangeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jake/Documents/Development/Freelance/Rara/Git/rara-core/contracts/token/interfaces/IERC721Collectible.sol\":{\"keccak256\":\"0x0f59089d1b343b904985e635047a61823bb448d627429322d6b85af66d122a0c\",\"urls\":[\"bzz-raw://4a1134748afaa15b76344c7a4a1a5c2b42e22af2b5c549e2cee32a2caebf8c31\",\"dweb:/ipfs/QmTTeRByeYjpTStsmmidWLYV5WdexhfjCm8LeExVMvNVDW\"]},\"/Users/jake/Documents/Development/Freelance/Rara/Git/rara-core/contracts/token/interfaces/IERC721TypeExchangeable.sol\":{\"keccak256\":\"0xffdaf59f13dfd9a91875b4b427cdcb6091f5706b5a4f2cbd31ce2e2f6930cfb5\",\"urls\":[\"bzz-raw://1fe91f5961ff925271d9dcdc1db0ae05329e0eaae722a597acf8113e90ab6fda\",\"dweb:/ipfs/QmfDkQ54gZhxHdVBsNGMAGLH3TK2ZLdTk165yKVt1qJ4dw\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "import \"./IERC721Collectible.sol\";\n\n/**\n * @title IERC721Exchangeable\n * @dev An ERC-721 Non-Fungible Token where each token is one of an enumerable\n * set of \"types.\" Each token type has with a value (that may or may not correspond to\n * purchase / sale price; e.g. it may be \"mining power\"). The total value owned\n * by an address may be queried, as well as the number of types owned and list of\n * tokens by type. Types are enumerated 0...n-1.\n */\npragma solidity ^0.8.0;\ninterface IERC721TypeExchangeable {\n    /**\n     * @dev Creates a new token for `to`. Its token ID will be automatically\n     * assigned (and available on the emitted {IERC721-Transfer} event), and the token\n     * URI autogenerated based on the base URI passed at construction.\n     */\n    function mint(address to, uint256 tokenType) external;\n\n    /**\n     * @dev Creates a new token for `to`. Its token ID will be automatically\n     * assigned (and available on the emitted {IERC721-Transfer} event), and the token\n     * URI autogenerated based on the base URI passed at construction.\n     */\n    function massMint(address to, uint256[] calldata tokenTypes) external;\n\n    /**\n     * @dev Burns the indicated token from `from`'s collection. Only allowed if the\n     * caller has approval to access this token its owner's collection (and `from`\n     * is the owner of the token).\n     */\n    function burnFrom(address from, uint256 tokenId) external;\n\n    /**\n     * @dev Burns the indicated token from `from`'s collection. Only allowed if the\n     * caller has approval to access this token its owner's collection (and `from`\n     * is the owner of the token).\n     */\n    function massBurnFrom(address from, uint256[] calldata tokenIds) external;\n\n    /**\n     * @dev Mass transfers tokens (listed as IDs) between the indicated addresses.\n     * The caller must have access to the tokens, which must all be owned by the\n     * indicated address. This is not a _safe_ transfer; tokens may be trapped\n     * in a contract which can't access them. For safe transfers, move them\n     * one at a time.\n     */\n    function massTransferFrom(address from, address to, uint256[] calldata tokenId) external;\n\n    /**\n     * @dev A batch-operation: burns the indicated tokens from the collection of\n     * `owner` (the caller must have approval to do this for all tokens), and\n     * mints to them the token type(s) indicated. The caller must have minting\n     * privileges and transfer access to all listed tokens (which must be owned\n     * by the indicated account).\n     */\n    function exchange(address owner, uint256[] calldata tokenIds, uint256[] calldata tokenTypes) external;\n}\n",
  "sourcePath": "/Users/jake/Documents/Development/Freelance/Rara/Git/rara-core/contracts/token/interfaces/IERC721TypeExchangeable.sol",
  "ast": {
    "absolutePath": "/Users/jake/Documents/Development/Freelance/Rara/Git/rara-core/contracts/token/interfaces/IERC721TypeExchangeable.sol",
    "exportedSymbols": {
      "IERC165": [
        4878
      ],
      "IERC721": [
        3574
      ],
      "IERC721Collectible": [
        100
      ],
      "IERC721TypeExchangeable": [
        161
      ]
    },
    "id": 162,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/Users/jake/Documents/Development/Freelance/Rara/Git/rara-core/contracts/token/interfaces/IERC721Collectible.sol",
        "file": "./IERC721Collectible.sol",
        "id": 102,
        "nodeType": "ImportDirective",
        "scope": 162,
        "sourceUnit": 101,
        "src": "0:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 103,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "451:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 161,
        "linearizedBaseContracts": [
          161
        ],
        "name": "IERC721TypeExchangeable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 104,
              "nodeType": "StructuredDocumentation",
              "src": "515:246:2",
              "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction."
            },
            "functionSelector": "40c10f19",
            "id": 111,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "780:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "tokenType",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "792:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "779:31:2"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "819:0:2"
            },
            "scope": 161,
            "src": "766:54:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 112,
              "nodeType": "StructuredDocumentation",
              "src": "826:246:2",
              "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction."
            },
            "functionSelector": "ca7445fa",
            "id": 120,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "massMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1095:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "tokenTypes",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1107:29:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 115,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1107:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 116,
                    "nodeType": "ArrayTypeName",
                    "src": "1107:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:43:2"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:0:2"
            },
            "scope": 161,
            "src": "1077:70:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "1153:213:2",
              "text": " @dev Burns the indicated token from `from`'s collection. Only allowed if the\n caller has approval to access this token its owner's collection (and `from`\n is the owner of the token)."
            },
            "functionSelector": "79cc6790",
            "id": 128,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1389:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1403:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1388:31:2"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1428:0:2"
            },
            "scope": 161,
            "src": "1371:58:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 129,
              "nodeType": "StructuredDocumentation",
              "src": "1435:213:2",
              "text": " @dev Burns the indicated token from `from`'s collection. Only allowed if the\n caller has approval to access this token its owner's collection (and `from`\n is the owner of the token)."
            },
            "functionSelector": "8245fc0b",
            "id": 137,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "massBurnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "1675:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "1689:27:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 132,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1689:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 133,
                    "nodeType": "ArrayTypeName",
                    "src": "1689:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1674:43:2"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1726:0:2"
            },
            "scope": 161,
            "src": "1653:74:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 138,
              "nodeType": "StructuredDocumentation",
              "src": "1733:352:2",
              "text": " @dev Mass transfers tokens (listed as IDs) between the indicated addresses.\n The caller must have access to the tokens, which must all be owned by the\n indicated address. This is not a _safe_ transfer; tokens may be trapped\n in a contract which can't access them. For safe transfers, move them\n one at a time."
            },
            "functionSelector": "a94ed1f8",
            "id": 148,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "massTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "2116:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2116:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "2130:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2130:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "2142:26:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 143,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2142:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 144,
                    "nodeType": "ArrayTypeName",
                    "src": "2142:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2115:54:2"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2178:0:2"
            },
            "scope": 161,
            "src": "2090:89:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 149,
              "nodeType": "StructuredDocumentation",
              "src": "2185:363:2",
              "text": " @dev A batch-operation: burns the indicated tokens from the collection of\n `owner` (the caller must have approval to do this for all tokens), and\n mints to them the token type(s) indicated. The caller must have minting\n privileges and transfer access to all listed tokens (which must be owned\n by the indicated account)."
            },
            "functionSelector": "8891a475",
            "id": 160,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2571:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2571:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2586:27:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 152,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2586:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 153,
                    "nodeType": "ArrayTypeName",
                    "src": "2586:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "tokenTypes",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2615:29:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 155,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2615:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 156,
                    "nodeType": "ArrayTypeName",
                    "src": "2615:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2570:75:2"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2654:0:2"
            },
            "scope": 161,
            "src": "2553:102:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 162,
        "src": "475:2182:2"
      }
    ],
    "src": "0:2658:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/jake/Documents/Development/Freelance/Rara/Git/rara-core/contracts/token/interfaces/IERC721TypeExchangeable.sol",
    "exportedSymbols": {
      "IERC165": [
        4878
      ],
      "IERC721": [
        3574
      ],
      "IERC721Collectible": [
        100
      ],
      "IERC721TypeExchangeable": [
        161
      ]
    },
    "id": 162,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/Users/jake/Documents/Development/Freelance/Rara/Git/rara-core/contracts/token/interfaces/IERC721Collectible.sol",
        "file": "./IERC721Collectible.sol",
        "id": 102,
        "nodeType": "ImportDirective",
        "scope": 162,
        "sourceUnit": 101,
        "src": "0:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 103,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "451:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 161,
        "linearizedBaseContracts": [
          161
        ],
        "name": "IERC721TypeExchangeable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 104,
              "nodeType": "StructuredDocumentation",
              "src": "515:246:2",
              "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction."
            },
            "functionSelector": "40c10f19",
            "id": 111,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "780:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "tokenType",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "792:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "779:31:2"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "819:0:2"
            },
            "scope": 161,
            "src": "766:54:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 112,
              "nodeType": "StructuredDocumentation",
              "src": "826:246:2",
              "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction."
            },
            "functionSelector": "ca7445fa",
            "id": 120,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "massMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1095:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "tokenTypes",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1107:29:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 115,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1107:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 116,
                    "nodeType": "ArrayTypeName",
                    "src": "1107:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:43:2"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:0:2"
            },
            "scope": 161,
            "src": "1077:70:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "1153:213:2",
              "text": " @dev Burns the indicated token from `from`'s collection. Only allowed if the\n caller has approval to access this token its owner's collection (and `from`\n is the owner of the token)."
            },
            "functionSelector": "79cc6790",
            "id": 128,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1389:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1403:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1388:31:2"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1428:0:2"
            },
            "scope": 161,
            "src": "1371:58:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 129,
              "nodeType": "StructuredDocumentation",
              "src": "1435:213:2",
              "text": " @dev Burns the indicated token from `from`'s collection. Only allowed if the\n caller has approval to access this token its owner's collection (and `from`\n is the owner of the token)."
            },
            "functionSelector": "8245fc0b",
            "id": 137,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "massBurnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "1675:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "1689:27:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 132,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1689:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 133,
                    "nodeType": "ArrayTypeName",
                    "src": "1689:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1674:43:2"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1726:0:2"
            },
            "scope": 161,
            "src": "1653:74:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 138,
              "nodeType": "StructuredDocumentation",
              "src": "1733:352:2",
              "text": " @dev Mass transfers tokens (listed as IDs) between the indicated addresses.\n The caller must have access to the tokens, which must all be owned by the\n indicated address. This is not a _safe_ transfer; tokens may be trapped\n in a contract which can't access them. For safe transfers, move them\n one at a time."
            },
            "functionSelector": "a94ed1f8",
            "id": 148,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "massTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "2116:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2116:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "2130:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2130:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "2142:26:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 143,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2142:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 144,
                    "nodeType": "ArrayTypeName",
                    "src": "2142:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2115:54:2"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2178:0:2"
            },
            "scope": 161,
            "src": "2090:89:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 149,
              "nodeType": "StructuredDocumentation",
              "src": "2185:363:2",
              "text": " @dev A batch-operation: burns the indicated tokens from the collection of\n `owner` (the caller must have approval to do this for all tokens), and\n mints to them the token type(s) indicated. The caller must have minting\n privileges and transfer access to all listed tokens (which must be owned\n by the indicated account)."
            },
            "functionSelector": "8891a475",
            "id": 160,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2571:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2571:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2586:27:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 152,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2586:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 153,
                    "nodeType": "ArrayTypeName",
                    "src": "2586:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "tokenTypes",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2615:29:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 155,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2615:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 156,
                    "nodeType": "ArrayTypeName",
                    "src": "2615:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2570:75:2"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2654:0:2"
            },
            "scope": 161,
            "src": "2553:102:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 162,
        "src": "475:2182:2"
      }
    ],
    "src": "0:2658:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-13T14:57:18.917Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "burnFrom(address,uint256)": {
        "details": "Burns the indicated token from `from`'s collection. Only allowed if the caller has approval to access this token its owner's collection (and `from` is the owner of the token)."
      },
      "exchange(address,uint256[],uint256[])": {
        "details": "A batch-operation: burns the indicated tokens from the collection of `owner` (the caller must have approval to do this for all tokens), and mints to them the token type(s) indicated. The caller must have minting privileges and transfer access to all listed tokens (which must be owned by the indicated account)."
      },
      "massBurnFrom(address,uint256[])": {
        "details": "Burns the indicated token from `from`'s collection. Only allowed if the caller has approval to access this token its owner's collection (and `from` is the owner of the token)."
      },
      "massMint(address,uint256[])": {
        "details": "Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction."
      },
      "massTransferFrom(address,address,uint256[])": {
        "details": "Mass transfers tokens (listed as IDs) between the indicated addresses. The caller must have access to the tokens, which must all be owned by the indicated address. This is not a _safe_ transfer; tokens may be trapped in a contract which can't access them. For safe transfers, move them one at a time."
      },
      "mint(address,uint256)": {
        "details": "Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}